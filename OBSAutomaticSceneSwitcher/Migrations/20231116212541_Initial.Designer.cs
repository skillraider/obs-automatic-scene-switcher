// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OBSAutomaticSceneSwitcher;

#nullable disable

namespace OBSAutomaticSceneSwitcher.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231116212541_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("OBSAutomaticSceneSwitcher.ConnectionSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IpPort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConnectionSettings");
                });

            modelBuilder.Entity("OBSAutomaticSceneSwitcher.WindowToScene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MapType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SceneName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WindowSearch")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WindowToScenes");
                });
#pragma warning restore 612, 618
        }
    }
}
